int playerVotes[64][2] = {};
int winningSets[64][2] = {};
str VotesDisplay[64] = {};

int voteTimeLimit;

Script "Lexicon_SyncClientData" (int player)
{
	int i = 0;
	//We don't need to do this in singleplayer
	if(GameType() == 0) terminate;
		
	//Let's init the cached mapsets first
	ACS_NamedExecuteWithResult("Lexicon_ClearClientMapCache", PlayerNumber());
	
	//Sync current player votes and wait
	for(i = 0; i < 64; i++)
		ACS_NamedExecuteWithResult("Lexicon_SendVoteToClient",i,playerVotes[i][0],playerVotes[i][1]);
	
	Delay(2);
		
	//I better send the strings to the player map prefixes array, then wait
	for(i = 0; i < MAXEXPANSIONS; i++)
		NamedSendNetworkString("Lexicon_SendMapInfoToClient",StrParam(s:existingMapSetTypes[i],c:i+1));	
	
	Delay(2);
	
	//Generate all of the map info on the client. It's better off this way
	ACS_NamedExecuteWithResult("Lexicon_GenerateMaps_Client", PlayerNumber());
}

Script "Lexicon_SendVoteToClient" (int player, int value1, int value2) clientside
{
	playerVotes[player][0] = value1;
	playerVotes[player][1] = value2;
}

Script "Lexicon_ClearClientMapCache" (int player) clientside
{
	if(player != ConsolePlayerNumber()) terminate;
	clearLexiconMapSetTypes();
}

Script "Lexicon_SendMapInfoToClient" (int value) clientside
{
	if(strlen(value) > 1)
	{
		str stringValue = StrLeft(value,4);
		int id = GetChar(StrRight(value,1),0)-1;
		if(stringValue != "")
			existingMapSetTypes[id] = stringValue;
	}
}

script "Lexicon_PlayerConnect" (int type, int arg1, int arg2) EVENT
{
	if(!isVR())
		terminate;	
		
	//GAMEEVENT_PLAYERCONNECT
	if(type == 9)
	{
		ACS_NamedExecuteWithResult("Lexicon_SyncClientData",PlayerNumber());
	}
			
	while(PlayerIsSpectator(arg1))
	{
		ACS_NamedExecuteWithResult("Lexicon_VoteTextDisplay",VoteTimeLimit,WAITTIMER);

		Delay(1);
	}
}

Script "Lexicon_PlayerDisconnect" (int player) DISCONNECT
{
	if(!isVR())
		terminate;	
		
	removeVote(player);
	SetActivator(0,player);
	RemoveMessages(100,160);
	SetPlayerProperty(0,0,PROP_TOTALLYFROZEN);
	
	while(PlayerIsSpectator(player))
	{
		ACS_NamedExecuteWithResult("Lexicon_VoteTextDisplay",VoteTimeLimit,WAITTIMER);
		
		Delay(1);
	}
}