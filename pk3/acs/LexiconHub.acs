#define MAX_MAPSETS 1024

str mapSetsAcronym[MAX_MAPSETS];
str mapSetsTitle[MAX_MAPSETS];
str mapSetsAuthors[MAX_MAPSETS];
str mapSetsMaps[MAX_MAPSETS];
str mapSetsDate[MAX_MAPSETS];
str mapSetsCustom[MAX_MAPSETS];
str mapSetsThumbnail[MAX_MAPSETS];

int mapSetCount = 0;
str selectedMapSet = "";

function void initiateLexiconMaps(void)
{
	for (int i = 1; i < MAX_MAPSETS; i++)
	{
		mapSetsAcronym[mapSetCount] = getDynLangEntry("ADD", "MAPSET", strparam(i:i));

		if (mapSetsAcronym[mapSetCount] != "_LANG_UNDEFINED_")
		{
			mapSetsTitle[mapSetCount] = getDynLangEntry(mapSetsAcronym[mapSetCount], "MAPSET", "TITLE");
			mapSetsAuthors[mapSetCount] = getDynLangEntry(mapSetsAcronym[mapSetCount], "MAPSET", "AUTHORS");
			mapSetsMaps[mapSetCount] = getDynLangEntry(mapSetsAcronym[mapSetCount], "MAPSET", "MAPS");
			mapSetsDate[mapSetCount] = getDynLangEntry(mapSetsAcronym[mapSetCount], "MAPSET", "DATE");
			mapSetsCustom[mapSetCount] = getDynLangEntry(mapSetsAcronym[mapSetCount], "MAPSET", "CUSTOM");

			if (CheckFont(strparam(s:mapSetsAcronym[mapSetCount], s:"TN"))) 
			{
				mapSetsThumbnail[mapSetCount] = StrParam(s:mapSetsAcronym[mapSetCount], s:"TN"); 
			}
			else { mapSetsThumbnail[mapSetCount] = "BLNKTN"; }

			//PrintBold(s:mapSetsAcronym[mapSetCount], s:" ", s:mapSetsTitle[mapSetCount], s:" ", s:mapSetsAuthors[mapSetCount], s:" ", s:mapSetsMaps[mapSetCount], s:" ", s:mapSetsThumbnail[mapSetCount]);

			mapSetCount++;
		}
	}
	mapSetCount--; // band-aid fix
}

function void displayLexiconUIControls(void)
{
	SetFont("CONFONT");
	SetHudSize(640, 480, TRUE);

	str switchMapPrompt = StrParam(l:"LEXICON_UI_PRESS_PROMPT_1", k:"+forward", s:"/", k:"+back", l:"LEXICON_UI_PRESS_PROMPT_2");
	str selectMapPrompt = StrParam(l:"LEXICON_UI_PRESS_PROMPT_1", k:"+fire", l:"LEXICON_UI_PRESS_PROMPT_3");
	str exitPrompt = StrParam(l:"LEXICON_UI_PRESS_PROMPT_1", k:"+speed", l:"LEXICON_UI_PRESS_PROMPT_4");

	if (mapSetCount > 1)
	{
		HudMessage(s:switchMapPrompt; HUDMSG_PLAIN, 550, CR_UNTRANSLATED, 320.0, 360.0, 0);
		HudMessage(s:selectMapPrompt; HUDMSG_PLAIN, 551, CR_UNTRANSLATED, 320.0, 370.0, 0);
		HudMessage(s:exitPrompt; HUDMSG_PLAIN, 552, CR_UNTRANSLATED, 320.0, 380.0, 0);
	}
	else
	{
		HudMessage(l:"LEXICON_UI_NO_MAPSETS"; HUDMSG_PLAIN, 550, CR_UNTRANSLATED, 320.0, 240.0, 0);
		HudMessage(s:exitPrompt; HUDMSG_PLAIN, 552, CR_UNTRANSLATED, 320.0, 380.0, 0);
	}
}

function void displayLexiconUIMapSetMetadata(int mapset)
{
	if (mapSetCount == 0) { return; }

	if (CheckFont(strparam(s:mapSetsAcronym[mapset], s:"TN"))) 
	{
		SetFont(strparam(s:mapSetsAcronym[mapset], s:"TN"));
	}
	else { SetFont("BLNKTN"); }
	SetHudSize(640, 480, TRUE);
	HudMessage(s:"A"; HUDMSG_PLAIN, 555, CR_UNTRANSLATED, 320.0, 200.0, 0);

	SetFont("CONFONT");
	HudMessage(s:mapSetsTitle[mapset]; HUDMSG_PLAIN, 556, CR_UNTRANSLATED, 320.0, 260.0, 0);
	HudMessage(l:"LEXICON_UI_AUTHORS", s:mapSetsAuthors[mapset]; HUDMSG_PLAIN, 557, CR_UNTRANSLATED, 320.0, 275.0, 0);
	HudMessage(l:"LEXICON_UI_MAPS", s:mapSetsMaps[mapset]; HUDMSG_PLAIN, 558, CR_UNTRANSLATED, 320.0, 290.0, 0);
	HudMessage(l:"LEXICON_UI_DATE", s:mapSetsDate[mapset]; HUDMSG_PLAIN, 559, CR_UNTRANSLATED, 320.0, 305.0, 0);

	if (mapSetsCustom[mapset] == "Y") { HudMessage(l:"LEXICON_UI_CUSTOM", l:"LEXICON_UI_CUSTOM_YES"; HUDMSG_PLAIN, 560, CR_UNTRANSLATED, 320.0, 320.0, 0); }
	else { HudMessage(l:"LEXICON_UI_CUSTOM", l:"LEXICON_UI_CUSTOM_NO"; HUDMSG_PLAIN, 560, CR_UNTRANSLATED, 320.0, 320.0, 0); }
}

function void clearLexiconUI(void)
{
	for (int i = 550; i < 575; i++)
	{
		HudMessage(s:""; HUDMSG_PLAIN, i, 1, 0.0, 0.0, 1);
	}
}

script "LexiconHubMapSelector" (void)
{
	Thing_Stop(0);
	SetPlayerProperty(0, 1, PROP_TOTALLYFROZEN);
	FadeTo(0, 0, 0, 0.5, 0);

	int i = 0;

	while (true)
	{
		SetFont("CONFONT");
		SetHudSize(640, 480, TRUE);
		int buttons = GetPlayerInput(-1, INPUT_BUTTONS);

		displayLexiconUIControls();
		displayLexiconUIMapSetMetadata(i);

		if (mapSetCount > 1)
		{
			if (buttons & BT_FORWARD)
			{
				if (i >= mapSetCount) { i == 0; }
				else { i++; Delay(3); }
			}

			if (buttons & BT_BACK)
			{
				if (i <= 0) { i == mapSetCount-1; }
				else { i--; Delay(3); }
			}
			
			if (buttons & BT_ATTACK)
			{
				selectedMapSet = (strparam(s:mapSetsAcronym[i]));
				HudMessage(s:mapSetsTitle[i], l:"LEXICON_UI_SELECTED"; HUDMSG_PLAIN, 561, CR_UNTRANSLATED, 320.0, 135.0, 0);
			}
		}

		if (buttons & BT_SPEED)
		{
			SetPlayerProperty(0, 0, PROP_TOTALLYFROZEN);
			FadeTo(0, 0, 0, 0.0, 0);

			clearLexiconUI();
			terminate;
		}
		delay(1);
	}
}

script "LexiconHubMapWarp" (void)
{
	str fistActor = getDynLangEntry(selectedMapSet, "WEAPON", 1);
	str pistolActor = getDynLangEntry(selectedMapSet, "WEAPON", 2);

	if (selectedMapSet != "")
	{
		if (!GetCVar("lexicon_vanilla_mode") && !isGameModded())
		{
			if (fistActor != "_LANG_UNDEFINED_") { GiveInventory(fistActor, 1); }
			else { GiveInventory("Fist", 1); }

			GiveInventory("Clip", 30);
			if (pistolActor != "_LANG_UNDEFINED_") { GiveInventory(pistolActor, 1); SetWeapon(pistolActor); }
			else { GiveInventory("Pistol", 1); SetWeapon("Pistol"); }
		}

		ChangeLevel(strParam(s:selectedMapSet, d:0, d:1), 0, CHANGELEVEL_NOINTERMISSION, -1);
	}
}